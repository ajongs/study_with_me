<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.CommentMapper" >
    <insert id="insertComment" parameterType="domain.Comment">
        INSERT INTO
            testdb.comment(comment_seq,
                           board_seq,
                           comment_content,
                           comment_writer,
                           comment_id,
                           comment_date)
        VALUES
            (
                null,
                #{board_seq},
                #{comment_content},
                #{comment_writer},
                #{comment_id},
                now()
            )
    </insert>
    <insert id="insertReply" parameterType="domain.Comment">
        INSERT INTO
            testdb.comment(comment_seq,
                           board_seq,
                           parent_seq,
                           comment_content,
                           comment_writer,
                           comment_id,
                           comment_date)
        VALUES
            (
                null,
                #{board_seq},
                #{parent_seq},
                #{comment_content},
                #{comment_writer},
                #{comment_id},
                now()
            )
    </insert>
    <select id="getComment" parameterType="int" resultType="domain.Comment">
        SELECT * FROM testdb.comment
        WHERE board_seq=#{seq}
        ORDER BY group_num, order_num
    </select>
    <update id="deleteComment" parameterType="hashMap">
        UPDATE
            testdb.comment
        SET
            is_deleted = true
        WHERE
            board_seq=#{board_seq} and comment_seq = #{comment_seq}
    </update>
    <select id="getCommentInPage" parameterType="hashMap" resultType="domain.Comment">
        SELECT
            comment_seq,
            board_seq,
            parent_seq,
            comment_content,
            comment_writer,
            comment_id,
            comment_date,
            is_deleted
        FROM
            testdb.comment
        WHERE
            parent_seq = 0 AND board_seq = #{board_seq}
        ORDER BY
            comment_seq
        LIMIT #{comment_page}, 10
    </select>
    <select id="getReply" parameterType="hashMap" resultType="domain.Comment">
        SELECT
            comment_seq,
            board_seq,
            parent_seq,
            comment_content,
            comment_writer,
            comment_id,
            comment_date,
            is_deleted
        FROM
            testdb.comment
        WHERE
            parent_seq = #{comment_seq} AND board_seq = #{board_seq}
        ORDER BY
            comment_seq
    </select>
</mapper>
<!--UPDATE testdb.comment SET group_num = (SELECT last_insert_id()) WHERE comment_seq = (SELECT last_insert_id());-->
<!-- (SELECT IFNULL(MAX(comment_seq)+1, 1) FROM testdb.comment c), -->